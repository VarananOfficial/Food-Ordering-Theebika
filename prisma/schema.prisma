// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("customer")
  createdAt DateTime @default(now())
  orders    Order[]

  @@map("users")
}

model FoodCategory {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  imageUrl    String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  foods       Food[]

  @@map("food_categories")
}

model Food {
  id          String        @id @default(cuid())
  name        String
  description String        @db.Text
  price       Float
  imageUrl    String?       // Made optional
  categoryId  String?       // Made optional
  createdAt   DateTime      @default(now())
  category    FoodCategory? @relation(fields: [categoryId], references: [id], onUpdate: Cascade)
  orderItems  OrderItem[]

  @@map("foods")
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  totalPrice Float
  status     String      @default("Pending")
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id], onUpdate: Cascade)
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id       String @id @default(cuid())
  orderId  String
  foodId   String
  quantity Int
  order    Order  @relation(fields: [orderId], references: [id], onUpdate: Cascade)
  food     Food   @relation(fields: [foodId], references: [id], onUpdate: Cascade)

  @@map("order_items")
}